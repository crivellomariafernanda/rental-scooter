// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rental_scooter.Models;

#nullable disable

namespace rental_scooter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rental_scooter.Models.RentalHistoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DropOffStationId")
                        .HasColumnType("int");

                    b.Property<int>("PickUpStationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentalEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentalStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScooterId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("TimeSpan")
                        .HasColumnType("time");

                    b.Property<string>("UserIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DropOffStationId");

                    b.HasIndex("PickUpStationId");

                    b.HasIndex("ScooterId");

                    b.ToTable("RentalHistoryEntries");
                });

            modelBuilder.Entity("rental_scooter.Models.Scooter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("StationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.ToTable("Scooters");
                });

            modelBuilder.Entity("rental_scooter.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("rental_scooter.Models.RentalHistoryEntry", b =>
                {
                    b.HasOne("rental_scooter.Models.Station", "DropOffStation")
                        .WithMany()
                        .HasForeignKey("DropOffStationId");

                    b.HasOne("rental_scooter.Models.Station", "PickUpStation")
                        .WithMany()
                        .HasForeignKey("PickUpStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rental_scooter.Models.Scooter", "Scooter")
                        .WithMany()
                        .HasForeignKey("ScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DropOffStation");

                    b.Navigation("PickUpStation");

                    b.Navigation("Scooter");
                });

            modelBuilder.Entity("rental_scooter.Models.Scooter", b =>
                {
                    b.HasOne("rental_scooter.Models.Station", "Station")
                        .WithMany("Scooters")
                        .HasForeignKey("StationId");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("rental_scooter.Models.Station", b =>
                {
                    b.Navigation("Scooters");
                });
#pragma warning restore 612, 618
        }
    }
}
